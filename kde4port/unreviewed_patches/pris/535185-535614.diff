Index: kpview.cpp
===================================================================
--- kpview.cpp	(revision 535184)
+++ kpview.cpp	(revision 535614)
@@ -90,9 +90,9 @@ kpView::kpView (kpDocument *document,
         kpViewManager *viewManager,
         kpView *buddyView,
         kpViewScrollableContainer *scrollableContainer,
-        QWidget *parent, const char *name)
+        QWidget *parent)
 
-    : QWidget (parent, name, Qt::WNoAutoErase/*no flicker*/),
+    : QWidget (parent, Qt::WNoAutoErase/*no flicker*/),
       d (new kpViewPrivate ())
 {
     d->m_document = document;
@@ -108,12 +108,11 @@ kpView::kpView (kpDocument *document,
 
     d->m_backBuffer = 0;
 
-
-    setBackgroundMode (Qt::NoBackground);  // no flicker
+    setAttribute(Qt::WA_NoSystemBackground, true);
     setFocusPolicy (Qt::WheelFocus);
     setMouseTracking (true);  // mouseMoveEvent's even when no mousebtn down
-    setKeyCompression (true);
-    setInputMethodEnabled (true);  // ensure using InputMethod
+    setAttribute(Qt::WA_KeyCompression, true);
+    setAttribute(Qt::WA_InputMethodEnabled, true); // ensure using InputMethod
 }
 
 kpView::~kpView ()
@@ -508,13 +507,13 @@ QPoint kpView::transformViewToOtherView 
 {
     if (this == otherView)
         return viewPoint;
-        
+
     const double docX = transformViewToDocX (viewPoint.x ());
     const double docY = transformViewToDocY (viewPoint.y ());
-    
+
     const double otherViewX = otherView->transformDocToViewX (docX);
     const double otherViewY = otherView->transformDocToViewY (docY);
-                   
+
     return QPoint ((int) otherViewX, (int) otherViewY);
 }
 
Index: kpdocumentsaveoptionswidget.h
===================================================================
--- kpdocumentsaveoptionswidget.h	(revision 535184)
+++ kpdocumentsaveoptionswidget.h	(revision 535614)
@@ -48,7 +48,7 @@ class kpDocumentSaveOptionsPreviewDialog
 Q_OBJECT
 
 public:
-    kpDocumentSaveOptionsPreviewDialog (QWidget *parent, const char *name = 0);
+    kpDocumentSaveOptionsPreviewDialog (QWidget *parent);
     virtual ~kpDocumentSaveOptionsPreviewDialog ();
 
     QSize preferredMinimumSize () const;
@@ -102,8 +102,8 @@ public:
     kpDocumentSaveOptionsWidget (const QPixmap &docPixmap,
                                  const kpDocumentSaveOptions &saveOptions,
                                  const kpDocumentMetaInfo &metaInfo,
-                                 QWidget *parent, const char *name = 0);
-    kpDocumentSaveOptionsWidget (QWidget *parent, const char *name = 0);
+                                 QWidget *parent);
+    kpDocumentSaveOptionsWidget (QWidget *parent);
 private:
     void init ();
 public:
Index: tools/kptoolpen.cpp
===================================================================
--- tools/kptoolpen.cpp	(revision 535184)
+++ tools/kptoolpen.cpp	(revision 535614)
@@ -968,7 +968,7 @@ void kpToolPen::slotEraserSizeChanged (i
 
     for (int i = 0; i < 2; i++)
     {
-        m_brushPixmap [i].resize (size, size);
+        m_brushPixmap [i] = QPixmap (size, size);
         if (color (i).isOpaque ())
             m_brushPixmap [i].fill (color (i).toQColor ());
     }
Index: tools/kptoolrotate.cpp
===================================================================
--- tools/kptoolrotate.cpp	(revision 535184)
+++ tools/kptoolrotate.cpp	(revision 535614)
@@ -192,7 +192,7 @@ void kpToolRotateCommand::unexecute ()
     if (!m_losslessRotation)
     {
         oldPixmap = m_oldPixmap;
-        m_oldPixmap.resize (0, 0);
+        m_oldPixmap = QPixmap();
     }
     else
     {
Index: kpmainwindow_file.cpp
===================================================================
--- kpmainwindow_file.cpp	(revision 535184)
+++ kpmainwindow_file.cpp	(revision 535614)
@@ -357,8 +357,8 @@ void kpMainWindow::slotOpenRecent (const
 bool kpMainWindow::save (bool localOnly)
 {
     if (m_document->url ().isEmpty () ||
-        KImageIO::mimeTypes (KImageIO::Writing)
-            .findIndex (m_document->saveOptions ()->mimeType ()) < 0 ||
+        !KImageIO::mimeTypes (KImageIO::Writing)
+            .contains (m_document->saveOptions ()->mimeType ()) ||
         // SYNC: kpDocument::getPixmapFromFile() can't determine quality
         //       from file
         (m_document->saveOptions ()->mimeTypeHasConfigurableQuality () &&
@@ -448,7 +448,7 @@ KUrl kpMainWindow::askForSaveURL (const 
     }
 
 #define MIME_TYPE_IS_VALID() (!fdSaveOptions.mimeTypeIsInvalid () &&                 \
-                              mimeTypes.findIndex (fdSaveOptions.mimeType ()) >= 0)
+                              mimeTypes.contains (fdSaveOptions.mimeType ()))
     if (!MIME_TYPE_IS_VALID ())
     {
     #if DEBUG_KP_MAIN_WINDOW
@@ -467,9 +467,9 @@ KUrl kpMainWindow::askForSaveURL (const 
             kDebug () << "\tmimeType=" << fdSaveOptions.mimeType ()
                        << " not valid, get hardcoded" << endl;
         #endif
-            if (mimeTypes.findIndex ("image/png") > -1)
+            if (mimeTypes.contains ("image/png"))
                 fdSaveOptions.setMimeType ("image/png");
-            else if (mimeTypes.findIndex ("image/x-bmp") > -1)
+            else if (mimeTypes.contains ("image/x-bmp"))
                 fdSaveOptions.setMimeType ("image/x-bmp");
             else
                 fdSaveOptions.setMimeType (mimeTypes.first ());
Index: kpmainwindow.cpp
===================================================================
--- kpmainwindow.cpp	(revision 535184)
+++ kpmainwindow.cpp	(revision 535614)
@@ -540,7 +540,8 @@ void kpMainWindow::setDocument (kpDocume
         m_mainView = new kpZoomedView (m_document, m_toolToolBar, m_viewManager,
                                        0/*buddyView*/,
                                        m_scrollView,
-                                       m_scrollView->viewport (), "mainView");
+                                       m_scrollView->viewport () );
+        m_mainView->setObjectName("mainView");
         if (m_scrollView)
         {
             m_scrollView->addChild (m_mainView);
Index: views/kpthumbnailview.h
===================================================================
--- views/kpthumbnailview.h	(revision 535184)
+++ views/kpthumbnailview.h	(revision 535614)
@@ -53,7 +53,7 @@ public:
                      kpViewManager *viewManager,
                      kpView *buddyView,
                      kpViewScrollableContainer *scrollableContainer,
-                     QWidget *parent, const char *name);
+                     QWidget *parent);
 
     /**
      * Destructs this thumbnail view.
Index: views/kpunzoomedthumbnailview.h
===================================================================
--- views/kpunzoomedthumbnailview.h	(revision 535184)
+++ views/kpunzoomedthumbnailview.h	(revision 535614)
@@ -65,7 +65,7 @@ public:
             kpViewManager *viewManager,
             kpView *buddyView,
             kpViewScrollableContainer *scrollableContainer,
-            QWidget *parent, const char *name);
+            QWidget *parent);
 
     /**
      * Destructs an unzoomed thumbnail view.
Index: views/kpzoomedview.cpp
===================================================================
--- views/kpzoomedview.cpp	(revision 535184)
+++ views/kpzoomedview.cpp	(revision 535614)
@@ -43,12 +43,12 @@ kpZoomedView::kpZoomedView (kpDocument *
         kpViewManager *viewManager,
         kpView *buddyView,
         kpViewScrollableContainer *scrollableContainer,
-        QWidget *parent, const char *name)
+        QWidget *parent)
 
     : kpView (document, toolToolBar, viewManager,
               buddyView,
               scrollableContainer,
-              parent, name)
+              parent)
 {
     // Call to virtual function - this is why the class is sealed
     adjustToEnvironment ();
@@ -69,7 +69,7 @@ void kpZoomedView::setZoomLevel (int hzo
 
     if (viewManager ())
         viewManager ()->setQueueUpdates ();
-  
+
     {
         kpView::setZoomLevel (hzoom, vzoom);
 
Index: views/kpzoomedthumbnailview.cpp
===================================================================
--- views/kpzoomedthumbnailview.cpp	(revision 535184)
+++ views/kpzoomedthumbnailview.cpp	(revision 535614)
@@ -43,12 +43,12 @@ kpZoomedThumbnailView::kpZoomedThumbnail
         kpViewManager *viewManager,
         kpView *buddyView,
         kpViewScrollableContainer *scrollableContainer,
-        QWidget *parent, const char *name)
+        QWidget *parent )
 
     : kpThumbnailView (document, toolToolBar, viewManager,
                        buddyView,
                        scrollableContainer,
-                       parent, name)
+                       parent)
 {
     // Call to virtual function - this is why the class is sealed
     adjustToEnvironment ();
Index: views/kpzoomedview.h
===================================================================
--- views/kpzoomedview.h	(revision 535184)
+++ views/kpzoomedview.h	(revision 535614)
@@ -61,7 +61,7 @@ public:
                   kpViewManager *viewManager,
                   kpView *buddyView,
                   kpViewScrollableContainer *scrollableContainer,
-                  QWidget *parent, const char *name);
+                  QWidget *parent);
 
     /**
      * Destructs an unzoomed view.
Index: views/kpthumbnailview.cpp
===================================================================
--- views/kpthumbnailview.cpp	(revision 535184)
+++ views/kpthumbnailview.cpp	(revision 535614)
@@ -39,12 +39,12 @@ kpThumbnailView::kpThumbnailView (kpDocu
         kpViewManager *viewManager,
         kpView *buddyView,
         kpViewScrollableContainer *scrollableContainer,
-        QWidget *parent, const char *name)
+        QWidget *parent)
 
     : kpView (document, toolToolBar, viewManager,
               buddyView,
               scrollableContainer,
-              parent, name)
+              parent)
 {
 }
 
@@ -81,7 +81,7 @@ void kpThumbnailView::resizeEvent (QResi
     // the event loop.  So eat useless update() calls that can only slow
     // things down.
     // TODO: this doesn't seem to work.
-    const bool oldIsUpdatesEnabled = isUpdatesEnabled ();
+    const bool oldIsUpdatesEnabled = updatesEnabled ();
     setUpdatesEnabled (false);
 
     {
Index: views/kpunzoomedthumbnailview.cpp
===================================================================
--- views/kpunzoomedthumbnailview.cpp	(revision 535184)
+++ views/kpunzoomedthumbnailview.cpp	(revision 535614)
@@ -50,12 +50,12 @@ kpUnzoomedThumbnailView::kpUnzoomedThumb
         kpViewManager *viewManager,
         kpView *buddyView,
         kpViewScrollableContainer *scrollableContainer,
-        QWidget *parent, const char *name)
+        QWidget *parent)
 
     : kpThumbnailView (document, toolToolBar, viewManager,
                        buddyView,
                        scrollableContainer,
-                       parent, name),
+                       parent),
       d (new kpUnzoomedThumbnailViewPrivate ())
 {
     if (buddyViewScrollableContainer ())
Index: views/kpzoomedthumbnailview.h
===================================================================
--- views/kpzoomedthumbnailview.h	(revision 535184)
+++ views/kpzoomedthumbnailview.h	(revision 535614)
@@ -60,7 +60,7 @@ public:
             kpViewManager *viewManager,
             kpView *buddyView,
             kpViewScrollableContainer *scrollableContainer,
-            QWidget *parent, const char *name);
+            QWidget *parent);
 
     /**
      * Destructs a zoomed thumbnail view.
Index: widgets/kptoolwidgeterasersize.cpp
===================================================================
--- widgets/kptoolwidgeterasersize.cpp	(revision 535184)
+++ widgets/kptoolwidgeterasersize.cpp	(revision 535614)
@@ -61,7 +61,7 @@ kpToolWidgetEraserSize::kpToolWidgetEras
 
         int s = eraserSizes [i];
 
-        cursorPixmap->resize (s, s);
+        *cursorPixmap = QPixmap(s, s);
         cursorPixmap->fill (Qt::black);
 
 
@@ -69,7 +69,7 @@ kpToolWidgetEraserSize::kpToolWidgetEras
         if (i < 3)
         {
             // HACK: kpToolWidgetBase's layout code sucks and gives uneven spacing
-            previewPixmap.resize ((width () - 4) / 3, 9);
+            previewPixmap = QPixmap ((width () - 4) / 3, 9);
         }
 
         QPainter painter (&previewPixmap);
Index: widgets/kptoolwidgetbrush.cpp
===================================================================
--- widgets/kptoolwidgetbrush.cpp	(revision 535184)
+++ widgets/kptoolwidgetbrush.cpp	(revision 535614)
@@ -66,8 +66,8 @@ kpToolWidgetBrush::kpToolWidgetBrush (QW
         {
             int w = (width () - 2/*margin*/ - 2/*spacing*/) / BRUSH_SIZE_NUM_COLS;
             int h = (height () - 2/*margin*/ - 3/*spacing*/) / BRUSH_SIZE_NUM_ROWS;
-            pm->resize ((w <= 0 ? width () : w),
-                        (h <= 0 ? height () : h));
+            *pm = QPixmap ((w <= 0 ? width () : w),
+                           (h <= 0 ? height () : h));
 
             const int s = brushSize [shape][i];
             QRect rect;
Index: pixmapfx/kpeffectemboss.cpp
===================================================================
--- pixmapfx/kpeffectemboss.cpp	(revision 535184)
+++ pixmapfx/kpeffectemboss.cpp	(revision 535614)
@@ -112,8 +112,8 @@ QPixmap kpEffectEmbossCommand::applyColo
 
 kpEffectEmbossWidget::kpEffectEmbossWidget (bool actOnSelection,
                                             kpMainWindow *mainWindow,
-                                            QWidget *parent, const char *name)
-    : kpColorEffectWidget (actOnSelection, mainWindow, parent, name)
+                                            QWidget *parent)
+    : kpColorEffectWidget (actOnSelection, mainWindow, parent)
 {
     QGridLayout *lay = new QGridLayout (this, 4, 2, marginHint (), spacingHint ());
 
Index: pixmapfx/kpeffectreducecolors.cpp
===================================================================
--- pixmapfx/kpeffectreducecolors.cpp	(revision 535184)
+++ pixmapfx/kpeffectreducecolors.cpp	(revision 535614)
@@ -278,9 +278,8 @@ QPixmap kpEffectReduceColorsCommand::app
 
 kpEffectReduceColorsWidget::kpEffectReduceColorsWidget (bool actOnSelection,
                                                         kpMainWindow *mainWindow,
-                                                        QWidget *parent,
-                                                        const char *name)
-    : kpColorEffectWidget (actOnSelection, mainWindow, parent, name)
+                                                        QWidget *parent )
+    : kpColorEffectWidget (actOnSelection, mainWindow, parent)
 {
     QVBoxLayout *lay = new QVBoxLayout (this, marginHint (), spacingHint ());
 
Index: pixmapfx/kpeffectblursharpen.h
===================================================================
--- pixmapfx/kpeffectblursharpen.h	(revision 535184)
+++ pixmapfx/kpeffectblursharpen.h	(revision 535614)
@@ -79,7 +79,7 @@ Q_OBJECT
 public:
     kpEffectBlurSharpenWidget (bool actOnSelection,
                                kpMainWindow *mainWindow,
-                               QWidget *parent, const char *name = 0);
+                               QWidget *parent);
     virtual ~kpEffectBlurSharpenWidget ();
 
     virtual QString caption () const;
Index: pixmapfx/kpeffectbalance.h
===================================================================
--- pixmapfx/kpeffectbalance.h	(revision 535184)
+++ pixmapfx/kpeffectbalance.h	(revision 535614)
@@ -80,7 +80,7 @@ Q_OBJECT
 public:
     kpEffectBalanceWidget (bool actOnSelection,
                            kpMainWindow *mainWindow,
-                           QWidget *parent, const char *name = 0);
+                           QWidget *parent);
     virtual ~kpEffectBalanceWidget ();
 
     virtual QString caption () const;
Index: pixmapfx/kpeffectflatten.cpp
===================================================================
--- pixmapfx/kpeffectflatten.cpp	(revision 535184)
+++ pixmapfx/kpeffectflatten.cpp	(revision 535614)
@@ -132,9 +132,8 @@ QColor kpEffectFlattenWidget::s_lastColo
 
 kpEffectFlattenWidget::kpEffectFlattenWidget (bool actOnSelection,
                                               kpMainWindow *mainWindow,
-                                              QWidget *parent,
-                                              const char *name)
-    : kpColorEffectWidget (actOnSelection, mainWindow, parent, name)
+                                              QWidget *parent )
+    : kpColorEffectWidget (actOnSelection, mainWindow, parent)
 {
     if (!s_lastColor1.isValid () || !s_lastColor2.isValid ())
     {
Index: pixmapfx/kpeffectemboss.h
===================================================================
--- pixmapfx/kpeffectemboss.h	(revision 535184)
+++ pixmapfx/kpeffectemboss.h	(revision 535614)
@@ -72,7 +72,7 @@ Q_OBJECT
 public:
     kpEffectEmbossWidget (bool actOnSelection,
                           kpMainWindow *mainWindow,
-                          QWidget *parent, const char *name = 0);
+                          QWidget *parent);
     virtual ~kpEffectEmbossWidget ();
 
     virtual QString caption () const;
Index: pixmapfx/kpeffectreducecolors.h
===================================================================
--- pixmapfx/kpeffectreducecolors.h	(revision 535184)
+++ pixmapfx/kpeffectreducecolors.h	(revision 535614)
@@ -78,7 +78,7 @@ Q_OBJECT
 public:
     kpEffectReduceColorsWidget (bool actOnSelection,
                                 kpMainWindow *mainWindow,
-                                QWidget *parent, const char *name = 0);
+                                QWidget *parent);
     virtual ~kpEffectReduceColorsWidget ();
 
 
Index: pixmapfx/kpeffectflatten.h
===================================================================
--- pixmapfx/kpeffectflatten.h	(revision 535184)
+++ pixmapfx/kpeffectflatten.h	(revision 535614)
@@ -81,7 +81,7 @@ Q_OBJECT
 public:
     kpEffectFlattenWidget (bool actOnSelection,
                            kpMainWindow *mainWindow,
-                           QWidget *parent, const char *name = 0);
+                           QWidget *parent);
     virtual ~kpEffectFlattenWidget ();
 
 
Index: pixmapfx/kpeffectinvert.cpp
===================================================================
--- pixmapfx/kpeffectinvert.cpp	(revision 535184)
+++ pixmapfx/kpeffectinvert.cpp	(revision 535614)
@@ -150,9 +150,8 @@ QPixmap kpEffectInvertCommand::applyColo
 
 kpEffectInvertWidget::kpEffectInvertWidget (bool actOnSelection,
                                             kpMainWindow *mainWindow,
-                                            QWidget *parent,
-                                            const char *name)
-    : kpColorEffectWidget (actOnSelection, mainWindow, parent, name)
+                                            QWidget *parent )
+    : kpColorEffectWidget (actOnSelection, mainWindow, parent)
 {
     QVBoxLayout *topLevelLay = new QVBoxLayout (this, marginHint (), spacingHint ());
 
Index: pixmapfx/kpeffectinvert.h
===================================================================
--- pixmapfx/kpeffectinvert.h	(revision 535184)
+++ pixmapfx/kpeffectinvert.h	(revision 535614)
@@ -96,7 +96,7 @@ Q_OBJECT
 public:
     kpEffectInvertWidget (bool actOnSelection,
                           kpMainWindow *mainWindow,
-                          QWidget *parent, const char *name = 0);
+                          QWidget *parent);
     virtual ~kpEffectInvertWidget ();
 
 
Index: pixmapfx/kpcoloreffect.cpp
===================================================================
--- pixmapfx/kpcoloreffect.cpp	(revision 535184)
+++ pixmapfx/kpcoloreffect.cpp	(revision 535614)
@@ -133,8 +133,8 @@ void kpColorEffectCommand::unexecute ()
 
 kpColorEffectWidget::kpColorEffectWidget (bool actOnSelection,
                                           kpMainWindow *mainWindow,
-                                          QWidget *parent, const char *name)
-    : QWidget (parent, name),
+                                          QWidget *parent)
+    : QWidget (parent),
       m_actOnSelection (actOnSelection),
       m_mainWindow (mainWindow)
 {
Index: pixmapfx/kppixmapfx.cpp
===================================================================
--- pixmapfx/kppixmapfx.cpp	(revision 535184)
+++ pixmapfx/kppixmapfx.cpp	(revision 535614)
@@ -223,7 +223,7 @@ QImage kpPixmapFX::convertToImage (const
     if (pixmap.isNull ())
         return QImage ();
 
-    return pixmap.convertToImage ();
+    return pixmap.toImage ();
 }
 
 
@@ -305,7 +305,7 @@ static void convertToPixmapWarnAboutLoss
         (KMessageBox::shouldBeShownContinue (colorDepthDontAskAgain) &&
          image.depth () > QPixmap::defaultDepth() &&
          QPixmap::defaultDepth () < 24);  // 32 indicates alpha channel
-	
+
     int screenDepthNeeded = 0;
 
     if (moreColorsThanDisplay)
@@ -386,7 +386,7 @@ QPixmap kpPixmapFX::convertToPixmap (con
 
     if (!pretty)
     {
-        destPixmap.convertFromImage (image,
+        destPixmap = QPixmap::fromImage(image,
                                      Qt::ColorOnly/*always display depth*/ |
                                      Qt::ThresholdDither/*no dither*/ |
                                      Qt::ThresholdAlphaDither/*no dither alpha*/|
@@ -394,7 +394,7 @@ QPixmap kpPixmapFX::convertToPixmap (con
     }
     else
     {
-        destPixmap.convertFromImage (image,
+        destPixmap = QPixmap::fromImage (image,
                                      Qt::ColorOnly/*always display depth*/ |
                                      Qt::DiffuseDither/*hi quality dither*/ |
                                      Qt::ThresholdAlphaDither/*no dither alpha*/ |
@@ -529,7 +529,7 @@ QPixmap kpPixmapFX::convertToPixmapAsLos
     }
 
 
-    destPixmap.convertFromImage (image,
+    destPixmap = QPixmap::fromImage (image,
                                  Qt::ColorOnly/*always display depth*/ |
                                  Qt::ThresholdAlphaDither/*no dither alpha*/ |
                                  ditherFlags);
@@ -568,6 +568,16 @@ QPixmap kpPixmapFX::pixmapWithDefinedTra
 }
 
 
+static void myCopyBlt(QPixmap *dst, int dx, int dy,
+                    const QPixmap *src, int sx, int sy, int sw, int sh)
+{
+    QImage image = dst->toImage();
+    QPainter p(&image);
+    p.setCompositionMode(QPainter::CompositionMode_Source);
+    p.drawPixmap(dx, dy, *src, sx, sy, sw, sh);
+    *dst = QPixmap::fromImage(image);
+}
+
 //
 // Get/Set Parts of Pixmap
 //
@@ -612,7 +622,7 @@ QPixmap kpPixmapFX::getPixmapAt (const Q
     const QPoint destTopLeft = validSrcRect.topLeft () - rect.topLeft ();
 
     // copy data _and_ mask (if avail)
-    copyBlt (&retPixmap, /* dest */
+    myCopyBlt (&retPixmap, /* dest */
              destTopLeft.x (), destTopLeft.y (), /* dest pt */
              &pm, /* src */
              validSrcRect.x (), validSrcRect.y (), /* src pt */
@@ -685,7 +695,7 @@ void kpPixmapFX::setPixmapAt (QPixmap *d
     //       Qt bug on boundary case?
 
     // copy data _and_ mask
-    copyBlt (destPixmapPtr,
+    myCopyBlt (destPixmapPtr,
              destAt.x (), destAt.y (),
              &srcPixmap,
              0, 0,
@@ -860,7 +870,6 @@ QBitmap kpPixmapFX::getNonNullMask (cons
     }
 }
 
-
 // public static
 QBitmap kpPixmapFX::getNonNullMaskAt (const QPixmap &pm, const QRect &rect)
 {
@@ -868,7 +877,7 @@ QBitmap kpPixmapFX::getNonNullMaskAt (co
 
     if (!pm.mask ().isNull ())
     {
-        copyBlt (&destMaskBitmap, 0, 0,
+        myCopyBlt (&destMaskBitmap, 0, 0,
                  &pm, rect.x (), rect.y (), rect.width (), rect.height ());
     }
     else
@@ -889,8 +898,8 @@ void kpPixmapFX::setMaskAt (QPixmap *des
 
     QBitmap destMaskBitmap (srcMaskBitmap.width (), srcMaskBitmap.height ());
 
-    copyBlt (&destMaskBitmap, destAt.x (), destAt.y (),
-             &srcMaskBitmap);
+    myCopyBlt (&destMaskBitmap, destAt.x (), destAt.y (),
+               &srcMaskBitmap, 0, 0, srcMaskBitmap.width(), srcMaskBitmap.height());
 
     destPixmapPtr->setMask (destMaskBitmap);
 }
@@ -1143,7 +1152,8 @@ void kpPixmapFX::resize (QPixmap *destPi
         return;
 
 
-    destPixmapPtr->resize (w, h);
+    *destPixmapPtr = QPixmap (w, h);
+#warning please check if the old value of destPixmapPtr needs to be copied
 
     if (fillNewAreas && (w > oldWidth || h > oldHeight))
     {
@@ -1267,7 +1277,7 @@ QPixmap kpPixmapFX::scale (const QPixmap
         matrix.scale (double (w) / double (pm.width ()),
                       double (h) / double (pm.height ()));
 
-        return pm.xForm (matrix);
+        return pm.transformed (matrix);
     }
 }
 
@@ -1404,7 +1414,7 @@ static QPixmap xForm (const QPixmap &pm,
 
     if (backgroundColor.isTransparent () || !pm.mask ().isNull ())
     {
-        newBitmapMask.resize (newPixmap.width (), newPixmap.height ());
+        newBitmapMask = QPixmap (newPixmap.width (), newPixmap.height ());
         newBitmapMask.fill (backgroundColor.maskColor ());
     }
 
@@ -1673,7 +1683,7 @@ QPixmap kpPixmapFX::flip (const QPixmap 
     if (!horz && !vert)
         return pm;
 
-    return pm.xForm (flipMatrix (pm, horz, vert));
+    return pm.transformed (flipMatrix (pm, horz, vert));
 }
 
 // public static
Index: pixmapfx/kpcoloreffect.h
===================================================================
--- pixmapfx/kpcoloreffect.h	(revision 535184)
+++ pixmapfx/kpcoloreffect.h	(revision 535614)
@@ -80,12 +80,12 @@ Q_OBJECT
 public:
     kpColorEffectWidget (bool actOnSelection,
                          kpMainWindow *mainWindow,
-                         QWidget *parent, const char *name = 0);
+                         QWidget *parent);
     virtual ~kpColorEffectWidget ();
 
 signals:
     void settingsChangedNoWaitCursor ();
-    
+
     void settingsChanged ();
 
     // (same as settingsChanged() but preview doesn't update until there
Index: pixmapfx/kpeffectblursharpen.cpp
===================================================================
--- pixmapfx/kpeffectblursharpen.cpp	(revision 535184)
+++ pixmapfx/kpeffectblursharpen.cpp	(revision 535614)
@@ -128,8 +128,8 @@ QPixmap kpEffectBlurSharpenCommand::appl
 
 kpEffectBlurSharpenWidget::kpEffectBlurSharpenWidget (bool actOnSelection,
                                                       kpMainWindow *mainWindow,
-                                                      QWidget *parent, const char *name)
-    : kpColorEffectWidget (actOnSelection, mainWindow, parent, name)
+                                                      QWidget *parent)
+    : kpColorEffectWidget (actOnSelection, mainWindow, parent)
 {
     QGridLayout *lay = new QGridLayout (this, 4, 2, marginHint (), spacingHint ());
 
Index: pixmapfx/kpeffectbalance.cpp
===================================================================
--- pixmapfx/kpeffectbalance.cpp	(revision 535184)
+++ pixmapfx/kpeffectbalance.cpp	(revision 535614)
@@ -255,8 +255,8 @@ QPixmap kpEffectBalanceCommand::applyCol
 
 kpEffectBalanceWidget::kpEffectBalanceWidget (bool actOnSelection,
                                               kpMainWindow *mainWindow,
-                                              QWidget *parent, const char *name)
-    : kpColorEffectWidget (actOnSelection, mainWindow, parent, name)
+                                              QWidget *parent)
+    : kpColorEffectWidget (actOnSelection, mainWindow, parent)
 {
     QGridLayout *lay = new QGridLayout (this, 5, 5, marginHint (), spacingHint ());
 
Index: kpmainwindow_view.cpp
===================================================================
--- kpmainwindow_view.cpp	(revision 535184)
+++ kpmainwindow_view.cpp	(revision 535614)
@@ -319,27 +319,27 @@ void kpMainWindow::zoomTo (int zoomLevel
         //       scrollview; hence the centring is off by about 5-10 pixels.
 
         // TODO: use visibleRect() for greater accuracy?
-        
+
         int viewX, viewY;
-        
+
         bool targetDocAvail = false;
         double targetDocX = -1, targetDocY = -1;
-        
+
         if (centerUnderCursor &&
             m_viewManager && m_viewManager->viewUnderCursor ())
         {
             kpView *const vuc = m_viewManager->viewUnderCursor ();
             QPoint viewPoint = vuc->mouseViewPoint ();
-        
+
             // vuc->transformViewToDoc() returns QPoint which only has int
             // accuracy so we do X and Y manually.
             targetDocX = vuc->transformViewToDocX (viewPoint.x ());
             targetDocY = vuc->transformViewToDocY (viewPoint.y ());
             targetDocAvail = true;
-                    
+
             if (vuc != m_mainView)
                 viewPoint = vuc->transformViewToOtherView (viewPoint, m_mainView);
-            
+
             viewX = viewPoint.x ();
             viewY = viewPoint.y ();
         }
@@ -352,7 +352,7 @@ void kpMainWindow::zoomTo (int zoomLevel
                         qMin (m_mainView->height (),
                               m_scrollView->visibleHeight ()) / 2;
         }
-        
+
         int newCenterX = viewX * zoomLevel / m_mainView->zoomLevelX ();
         int newCenterY = viewY * zoomLevel / m_mainView->zoomLevelY ();
 
@@ -389,12 +389,12 @@ void kpMainWindow::zoomTo (int zoomLevel
             m_viewManager && m_viewManager->viewUnderCursor ())
         {
             kpView *const vuc = m_viewManager->viewUnderCursor ();
-            
+
         #if DEBUG_KP_MAIN_WINDOW
             kDebug () << "\tcenterUnderCursor: reposition cursor; viewUnderCursor="
                        << vuc->name () << endl;
         #endif
-        
+
             const double viewX = vuc->transformDocToViewX (targetDocX);
             const double viewY = vuc->transformDocToViewY (targetDocY);
             // Rounding error from zooming in and out :(
@@ -403,9 +403,9 @@ void kpMainWindow::zoomTo (int zoomLevel
         #if DEBUG_KP_MAIN_WINDOW
             kDebug () << "\t\tdoc: (" << targetDocX << "," << targetDocY << ")"
                        << " viewUnderCursor: (" << viewX << "," << viewY << ")"
-                       << endl; 
+                       << endl;
         #endif
-        
+
         // COMPAT: no more QWidget::clipRegion()
         #if 0
             if (vuc->clipRegion ().contains (viewPoint))
@@ -415,7 +415,7 @@ void kpMainWindow::zoomTo (int zoomLevel
             #if DEBUG_KP_MAIN_WINDOW
                 kDebug () << "\t\tglobalPoint=" << globalPoint << endl;
             #endif
-                
+
                 // TODO: Determine some sane cursor flashing indication -
                 //       cursor movement is convenient but not conventional.
                 //
@@ -444,13 +444,13 @@ void kpMainWindow::zoomTo (int zoomLevel
                 kDebug () << "\t\twon't move cursor - would get outside view"
                            << endl;
             #endif
-            
+
                 // TODO: Sane cursor flashing indication that indicates
                 //       that the normal cursor movement didn't happen.
             }
         #endif
         }
-        
+
     #if DEBUG_KP_MAIN_WINDOW && 1
         kDebug () << "\t\tcheck (contentsX=" << m_scrollView->contentsX ()
                     << ",contentsY=" << m_scrollView->contentsY ()
@@ -662,24 +662,24 @@ void kpMainWindow::slotFitToHeight ()
 
 // public
 void kpMainWindow::zoomIn (bool centerUnderCursor)
-{    
+{
     const int targetItem = m_actionZoom->currentItem () + 1;
-    
+
     if (targetItem >= (int) m_zoomList.count ())
         return;
-        
+
     m_actionZoom->setCurrentItem (targetItem);
     zoomAccordingToZoomAction (centerUnderCursor);
 }
 
 // public
 void kpMainWindow::zoomOut (bool centerUnderCursor)
-{    
+{
     const int targetItem = m_actionZoom->currentItem () - 1;
-    
+
     if (targetItem < 0)
         return;
-        
+
     m_actionZoom->setCurrentItem (targetItem);
     zoomAccordingToZoomAction (centerUnderCursor);
 }
@@ -995,7 +995,8 @@ void kpMainWindow::createThumbnailView (
             m_document, m_toolToolBar, m_viewManager,
             m_mainView,
             0/*scrollableContainer*/,
-            m_thumbnail, "thumbnailView");
+            m_thumbnail );
+        m_thumbnailView->setObjectName( "thumbnailView" );
     }
     else
     {
@@ -1003,8 +1004,8 @@ void kpMainWindow::createThumbnailView (
             m_document, m_toolToolBar, m_viewManager,
             m_mainView,
             0/*scrollableContainer*/,
-            m_thumbnail, "thumbnailView");
-
+            m_thumbnail);
+        m_thumbnailView->setObjectName( "thumbnailView" );
     }
 
     m_thumbnailView->showBuddyViewScrollableContainerRectangle (
Index: kpdocumentsaveoptionswidget.cpp
===================================================================
--- kpdocumentsaveoptionswidget.cpp	(revision 535184)
+++ kpdocumentsaveoptionswidget.cpp	(revision 535614)
@@ -65,13 +65,12 @@ const QSize kpDocumentSaveOptionsPreview
 
 
 kpDocumentSaveOptionsPreviewDialog::kpDocumentSaveOptionsPreviewDialog (
-        QWidget *parent,
-        const char *name)
-    : QWidget (parent, name,
+    QWidget *parent )
+    : QWidget (parent,
                Qt::WType_TopLevel |
                Qt::WStyle_Customize |
-                   Qt::WStyle_DialogBorder |
-                   Qt::WStyle_Title),
+               Qt::WStyle_DialogBorder |
+               Qt::WStyle_Title),
 #if 0
 KDialogBase (parent, name, false/*non-modal*/,
                    i18n ("Save Preview"),
@@ -80,7 +79,7 @@ KDialogBase (parent, name, false/*non-mo
       m_filePixmap (0),
       m_fileSize (0)
 {
-    setCaption (i18n ("Save Preview"));
+    setWindowTitle (i18n ("Save Preview"));
 
     QWidget *baseWidget = this;//new QWidget (this);
     //setMainWidget (baseWidget);
@@ -261,8 +260,8 @@ kpDocumentSaveOptionsWidget::kpDocumentS
         const QPixmap &docPixmap,
         const kpDocumentSaveOptions &saveOptions,
         const kpDocumentMetaInfo &metaInfo,
-        QWidget *parent, const char *name)
-    : QWidget (parent, name),
+        QWidget *parent)
+    : QWidget (parent),
       m_visualParent (parent)
 {
     init ();
@@ -272,8 +271,8 @@ kpDocumentSaveOptionsWidget::kpDocumentS
 }
 
 kpDocumentSaveOptionsWidget::kpDocumentSaveOptionsWidget (
-        QWidget *parent, const char *name)
-    : QWidget (parent, name),
+        QWidget *parent)
+    : QWidget (parent),
       m_visualParent (parent)
 {
     init ();
@@ -725,7 +724,8 @@ void kpDocumentSaveOptionsWidget::showPr
 
     if (yes)
     {
-        m_previewDialog = new kpDocumentSaveOptionsPreviewDialog (m_visualParent, "previewSaveDialog");
+        m_previewDialog = new kpDocumentSaveOptionsPreviewDialog( m_visualParent );
+        m_previewDialog->setObjectName( "previewSaveDialog" );
         updatePreview ();
 
         connect (m_previewDialog, SIGNAL (finished ()),
Index: kpview.h
===================================================================
--- kpview.h	(revision 535184)
+++ kpview.h	(revision 535614)
@@ -90,7 +90,7 @@ public:
             kpViewManager *viewManager,
             kpView *buddyView,
             kpViewScrollableContainer *scrollableContainer,
-            QWidget *parent, const char *name);
+            QWidget *parent);
 
     /**
      * Destructs this view.  Informs the viewManager() that the mouse
@@ -322,8 +322,8 @@ public:
      */
     QPoint transformViewToOtherView (const QPoint &viewPoint,
                                      const kpView *otherView);
-    
-                                        
+
+
     /**
      * @returns the approximate view width required to display the entire
      *          document(), based on the zoom level only.
@@ -383,7 +383,7 @@ public:
      * is set to queue updates.
      */
     void updateQueuedArea ();
-    
+
     void updateMicroFocusHint (const QRect &microFocusHint);
 
 
@@ -493,7 +493,7 @@ protected:
 
     virtual void dragEnterEvent (QDragEnterEvent *);
     virtual void dragLeaveEvent (QDragLeaveEvent *);
-    
+
     // COMPAT
     //virtual void imStartEvent (QIMEvent *e);
     //virtual void imComposeEvent (QIMEvent *e);
Index: kpmainwindow_help.cpp
===================================================================
--- kpmainwindow_help.cpp	(revision 535184)
+++ kpmainwindow_help.cpp	(revision 535614)
@@ -108,7 +108,7 @@ void kpMainWindow::slotHelpTakingScreens
 #if DEBUG_KP_MAIN_WINDOW
     kDebug () << "\tdcopApps=" << dcopApps << endl;
 #endif
-    bool isRunningKDE = (dcopApps.findIndex ("kwin") >= 0);
+    bool isRunningKDE = dcopApps.contains ("kwin");
 
 #if 0
 {
Index: kpselection.cpp
===================================================================
--- kpselection.cpp	(revision 535184)
+++ kpselection.cpp	(revision 535614)
@@ -1269,7 +1269,7 @@ void kpSelection::calculateTransparencyM
     #if DEBUG_KP_SELECTION
         kDebug () << "\ttext - no need for transparency mask" << endl;
     #endif
-        m_transparencyMask.resize (0, 0);
+        m_transparencyMask = QPixmap();
         return;
     }
 
@@ -1278,7 +1278,7 @@ void kpSelection::calculateTransparencyM
     #if DEBUG_KP_SELECTION
         kDebug () << "\tno pixmap - no need for transparency mask" << endl;
     #endif
-        m_transparencyMask.resize (0, 0);
+        m_transparencyMask = QPixmap();
         return;
     }
 
@@ -1287,11 +1287,11 @@ void kpSelection::calculateTransparencyM
     #if DEBUG_KP_SELECTION
         kDebug () << "\topaque - no need for transparency mask" << endl;
     #endif
-        m_transparencyMask.resize (0, 0);
+        m_transparencyMask = QPixmap();
         return;
     }
 
-    m_transparencyMask.resize (m_pixmap->width (), m_pixmap->height ());
+    m_transparencyMask = QPixmap (m_pixmap->width (), m_pixmap->height ());
 
     QImage image = kpPixmapFX::convertToImage (*m_pixmap);
     QPainter transparencyMaskPainter (&m_transparencyMask);
@@ -1323,7 +1323,7 @@ void kpSelection::calculateTransparencyM
     #if DEBUG_KP_SELECTION
         kDebug () << "\tcolour useless - completely opaque" << endl;
     #endif
-        m_transparencyMask.resize (0, 0);
+        m_transparencyMask = QPixmap();
         return;
     }
 }
