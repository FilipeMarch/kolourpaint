Index: widgets/kpcolorsimilaritycube.cpp
===================================================================
--- widgets/kpcolorsimilaritycube.cpp	(revision 535888)
+++ widgets/kpcolorsimilaritycube.cpp	(revision 536486)
@@ -248,8 +248,8 @@ void kpColorSimilarityCube::drawFace (QP
     #if DEBUG_KP_COLOR_SIMILARITY_CUBE
         kDebug () << "\tnot enabled - making us grey" << endl;
     #endif
-        colors [0] = colorGroup ().background ();
-        colors [1] = colorGroup ().background ();
+        colors [0] = palette ().color( QPalette::Background );
+        colors [1] = palette ().color( QPalette::Background );
     }
 
 #if DEBUG_KP_COLOR_SIMILARITY_CUBE
@@ -275,7 +275,7 @@ void kpColorSimilarityCube::drawContents
     QRect cr (contentsRect ());
 
     QPixmap backBuffer (cr.width (), cr.height ());
-    backBuffer.fill (colorGroup ().background ());
+    backBuffer.fill ( palette().color( QPalette::Background) );
 
     QPainter backBufferPainter (&backBuffer);
 
@@ -591,24 +591,19 @@ void kpToolToolBar::setOrientation (Qt::
         m_baseLayout = new QBoxLayout (m_baseWidget, QBoxLayout::TopToBottom,
                                        5/*margin*/,
                                        10/*spacing*/);
-        m_toolLayout = new QGridLayout (m_baseLayout,
-                                        5/*arbitrary rows since toolBar auto-expands*/,
-                                        m_vertCols,
-                                        0/*margin*/,
-                                        0/*spacing*/);
     }
     else // if (o == Qt::Horizontal)
     {
         m_baseLayout = new QBoxLayout (m_baseWidget, QBoxLayout::LeftToRight,
                                        5/*margin*/,
                                        10/*spacing*/);
-        m_toolLayout = new QGridLayout (m_baseLayout,
-                                        m_vertCols/*rows in this case, since horiz*/,
-                                        5/*arbitrary cols since toolBar auto-expands*/,
-                                        0/*margin*/,
-                                        0/*spacing*/);
     }
 
+    m_toolLayout = new QGridLayout ();
+    m_baseLayout->addItem( m_toolLayout );
+    m_toolLayout->setMargin( 0 );
+    m_toolLayout->setSpacing( 0 );
+
     int num = 0;
 
     for (QList <kpButtonToolPair>::iterator it = m_buttonToolPairs.begin ();
Index: widgets/kpcolortoolbar.cpp
===================================================================
--- widgets/kpcolortoolbar.cpp	(revision 535888)
+++ widgets/kpcolortoolbar.cpp	(revision 536486)
@@ -318,14 +318,14 @@ void kpDualColorButton::drawContents (QP
     else
     {
         backBufferPainter.fillRect (m_backBuffer->rect (),
-                                    colorGroup ().color (QColorGroup::Background));
+                                    palette ().color (QPalette::Background));
     }
 
     QPixmap swapPixmap = UserIcon ("colorbutton_swap_16x16");
     if (!isEnabled ())
     {
         // swapPixmap has a mask after all
-        swapPixmap.fill (colorGroup ().color (QColorGroup::Dark));
+        swapPixmap.fill (palette().color (QPalette::Dark));
     }
     backBufferPainter.drawPixmap (swapPixmapRect ().topLeft (), swapPixmap);
 
@@ -346,8 +346,8 @@ void kpDualColorButton::drawContents (QP
             backBufferPainter.drawPixmap (bgRectInside, UserIcon ("color_transparent_26x26"));
     }
     else
-        backBufferPainter.fillRect (bgRectInside, colorGroup ().color (QColorGroup::Button));
-    qDrawShadePanel (&backBufferPainter, bgRect, colorGroup (),
+        backBufferPainter.fillRect (bgRectInside, palette().color (QPalette::Button));
+    qDrawShadePanel (&backBufferPainter, bgRect, palette(),
                      false/*not sunken*/, 2/*lineWidth*/,
                      0/*never fill*/);
 
@@ -366,8 +366,8 @@ void kpDualColorButton::drawContents (QP
             backBufferPainter.drawPixmap (fgRectInside, UserIcon ("color_transparent_26x26"));
     }
     else
-        backBufferPainter.fillRect (fgRectInside, colorGroup ().color (QColorGroup::Button));
-    qDrawShadePanel (&backBufferPainter, fgRect, colorGroup (),
+        backBufferPainter.fillRect (fgRectInside, palette ().color (QPalette::Button));
+    qDrawShadePanel (&backBufferPainter, fgRect, palette (),
                      false/*not sunken*/, 2/*lineWidth*/,
                      0/*never fill*/);
 
Index: kpviewscrollablecontainer.cpp
===================================================================
--- kpviewscrollablecontainer.cpp	(revision 535888)
+++ kpviewscrollablecontainer.cpp	(revision 536486)
@@ -188,7 +188,7 @@ void kpGrip::updatePixmap ()
         return;
 
     QPixmap pixmap (width (), height ());
-    pixmap.fill (colorGroup ().highlight ());
+    pixmap.fill (palette().color( QPalette::Highlight ) );
     kpPixmapFX::ensureTransparentAt (&pixmap, pixmap.rect ());
     const QRect hr = hotRect ();
 #if DEBUG_KP_VIEW_SCROLLABLE_CONTAINER
