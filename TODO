
$Id$


Before 1.0
===========

Short-Term
----------

kptoolwidgetbase - spacing between items, make contentsRect() actual size wanted
                 - tooltips
tool widget colours hard (i.e. impossible) to see on an 8-bit display
make fill style GUI clearer

working thumbnail view; also maybe shouldn't be a toolbar

kpcolortoolbar - open/save palette

brush shape in wrong place if zoom smaller (or scroll with wheel)
Reason: the mouse isn't moving relative to the view (as the view is moving
relative to the mouse instead) so its position stays the same
(relative to the document).
if brush, close, move cursor, new; brush in wrong place

spraycan icons

zoom levels < 100%

line: shift + alt doesn't work but alt+shift does
- alt is backfiring (conflicts with kwin)...hmm what should I do?

rewrite colour eraser
- faster
- rwlbuis' test

warn about lossy saves


Medium Term (2-4 weeks)
---------------------

fix selections; implement free-form selection
- clean interface
- drastically improve performance
- Undo/Redo
- transparent & opaque selections
Image menu items as ordinary tools
honour background colour for Skew, Rotate

clean up kpmainwindow
- statusbar
- settings menu
- propagation of settings thru mainwindows

config dialogs (look into new kconfig generator)

Colour Eraser as part of the Image Menu;
dbl-click on Colour Eraser does whole image?

tool/text
paste text (editable after you paste it)

Killer Feature: with flow tools (pen, brush, spraycan), holding SHIFT forces horizontal drawing;
                CTRL forces vertical - so those of us without perfectly steady hands
                can still draw straight without continually hitting the Undo button :)


Long-Term (approx 1-2 months)
-----------------------------

intersect bounding rect with document rect when saving undo info
- e.g. if you drag a large rect bigger than the view, waste a lot of memory
ditto for setTempPixmapAt et. al. (maybe not for selections, still thinking)

Rethink kpView/kpViewManager design because of:
- flicker
- performance
- difficult selection handling, esp. drawing the selction border
Ideas:
- region-based rendering (for performance)
- blockUpdates() for transaction-based rendering (removes flicker)
- do something about this horrible tempPixmap hack (it slooooow)

make sure session restore actually works

icons for some of the Image dialogs

transparent images
- will also require an additional colour in the kpColorToolBar

colour depth audit
- do 8-bit pixmaps work?
- are we incorrectly using kpDocument::setPixmap() with mono pixmaps?

random pixels in the view showing up with the Colour Eraser Tool and Zoom over a remote display

tool icons - if a more experienced artist doesn't offer to draw new ones,
I'll be forced to redo them myself once transparency is supported

documentation (assigned to Thurston)


Can be delayed till after 1.0
-----------------------------

Zoom zooms into/out of the centre, not the top-left (like a camera)

if you undock a vertical toolbar and right click --> Orientation --> Bottom,
it stays vertically oriented
- maybe before 1.0

guard all ptr derefs with if (ptr) ptr->whatever
- also don't store ptrs to e.g. kpDocument as they may go out of date

kdError -> KP_PANIC or KMessageBox
wait cursor for slow ops - should it be in kpDocument or in the commands???


After 1.0
==========

KolourPaint at 1.0 should be very usable.  So the following are just nice
ideas that may or may not ever get implemented:


Image/Convert Colour Depth (only be able to dither to colour depths lower
than the current display - limitation of X).  Hmmm, I could understand
going down to mono (image effect) but why would you want to e.g. convert
to 8 bit - if you save in an 8-bit format after that, you'll lose colour
info twice.

fill - can optimise mem usage by deleting kpFloodFill object
       when execute() (don't derive object)
     - can optimise mem usage by detecting single colour fills

ability to specify measurements in pt,mm,cm,m,in instead of just pixels

ruler

grid for zoom levels > 200 but % 100 != 0

maybe allow editing when a selection is active (selection becomes bounding rect)

shape selections should support CTRL, ALT, SHIFT to alter shape but
ATM, CTRL means copy, SHIFT means sweep.  Maybe have a "Selection Mode" and a
"Drawing Mode"?

DCOP scriptable

"a simple plugins framework that allows plugins to be written in various
languages (C, Python and Perl being the obvious choices) to allow people to
extend it into the realms of PaintShop Pro without impacting on the core
philosophy of the app, which seems to be simplicity." -- Tom

offer to save Undo/Redo QPixmap's as PNGs to save memory

Edit/Find a particular colour

fullscreen
allow user to hide Tool Box & Colour Palette if they really insist

"Open documents in the same window" mode - goes against what most KDE apps do
but it is convenient sometimes

File/Insert as selection
File/Save selection

colour palette shows frequently used colours for the current image

blur & sharpen

tool/ruler (can even measure length & angle of diagonal lines)

readonly mode

network friendly - async save with progress bar

Edit/Paste in New Window; if !kpMainWindow::shouldOpenInNewWindow(),
it should resize the existing view to fit the selection (most useful if
view is too large since we already enlarge view if too small with
ordinary Edit/Paste anyway) - maybe we'd have to rename the action in
this case (but wouldn't an action with 2 names be confusing?).

Image/ Contrast, Brightness, ...

