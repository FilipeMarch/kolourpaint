BEGIN
Begin massive refactor of all tools derived from kpToolPen (they should
really all derive from another base eventually BTW).

Push down kpToolPen::globalDraw() to kpTool{Eraser,ColorWasher}.

Style.
END

diff -udpr -x'*.o' -x'*.moc' -xconfig.log -x.deps -xkolourpaintlicense.h -x.libs -xMakefile.in -xMakefile -x'*~' -x'*.lo' -x'.*.sw*' -xk -xCODING_STYLE -xkolourpaintversion.h base/kolourpaint/tools/kptoolcolorwasher.cpp head/kolourpaint/tools/kptoolcolorwasher.cpp
--- base/kolourpaint/tools/kptoolcolorwasher.cpp	2005-02-02 22:11:27.000000000 +1100
+++ head/kolourpaint/tools/kptoolcolorwasher.cpp	2005-06-23 13:54:17.622828776 +1000
@@ -26,9 +26,23 @@
 */
 
 
-#include <klocale.h>
+#define DEBUG_KP_TOOL_COLOR_WASHER 0
+
+
 #include <kptoolcolorwasher.h>
 
+#include <qbitmap.h>
+#include <qimage.h>
+#include <qpainter.h>
+
+#include <kapplication.h>
+#include <klocale.h>
+#include <kpdocument.h>
+#include <kppixmapfx.h>
+
+#include <kpcolor.h>
+
+
 kpToolColorWasher::kpToolColorWasher (kpMainWindow *mainWindow)
     : kpToolPen (kpToolPen::ColorWasher,
                  i18n ("Color Eraser"),
@@ -42,4 +56,81 @@ kpToolColorWasher::~kpToolColorWasher ()
 {
 }
 
+
+// public virtual [base kpTool]
+void kpToolColorWasher::globalDraw ()
+{
+#if DEBUG_KP_TOOL_COLOR_WASHER
+    kdDebug () << "kpToolColorWasher::globalDraw()" << endl;
+#endif
+    if (foregroundColor () == backgroundColor () && processedColorSimilarity () == 0)
+        return;
+
+    QApplication::setOverrideCursor (Qt::waitCursor);
+
+    kpToolPenCommand *cmd = new kpToolPenCommand (
+        i18n ("Color Eraser"), mainWindow ());
+
+    QPainter painter, maskPainter;
+    QBitmap maskBitmap;
+
+    if (backgroundColor ().isOpaque ())
+    {
+        painter.begin (document ()->pixmap ());
+        painter.setPen (backgroundColor ().toQColor ());
+    }
+
+    if (backgroundColor ().isTransparent () ||
+        document ()->pixmap ()->mask ())
+    {
+        maskBitmap = kpPixmapFX::getNonNullMask (*document ()->pixmap ());
+        maskPainter.begin (&maskBitmap);
+
+        maskPainter.setPen (backgroundColor ().maskColor ());
+    }
+
+    const QImage image = kpPixmapFX::convertToImage (*document ()->pixmap ());
+    QRect rect = document ()->rect ();
+
+    const bool didSomething = wash (&painter, &maskPainter, image,
+                                    foregroundColor ()/*replace foreground*/,
+                                    rect, rect);
+
+    // flush
+    if (painter.isActive ())
+        painter.end ();
+
+    if (maskPainter.isActive ())
+        maskPainter.end ();
+
+    if (didSomething)
+    {
+        if (!maskBitmap.isNull ())
+            document ()->pixmap ()->setMask (maskBitmap);
+
+
+        document ()->slotContentsChanged (rect);
+
+
+        cmd->updateBoundingRect (rect);
+        cmd->finalize ();
+
+        commandHistory ()->addCommand (cmd, false /* don't exec */);
+
+        // don't delete - it's up to the commandHistory
+        cmd = 0;
+    }
+    else
+    {
+    #if DEBUG_KP_TOOL_COLOR_WASHER
+        kdDebug () << "\tisNOP" << endl;
+    #endif
+        delete cmd;
+        cmd = 0;
+    }
+
+    QApplication::restoreOverrideCursor ();
+}
+
+
 #include <kptoolcolorwasher.moc>
diff -udpr -x'*.o' -x'*.moc' -xconfig.log -x.deps -xkolourpaintlicense.h -x.libs -xMakefile.in -xMakefile -x'*~' -x'*.lo' -x'.*.sw*' -xk -xCODING_STYLE -xkolourpaintversion.h base/kolourpaint/tools/kptoolcolorwasher.h head/kolourpaint/tools/kptoolcolorwasher.h
--- base/kolourpaint/tools/kptoolcolorwasher.h	2005-02-02 22:11:27.000000000 +1100
+++ head/kolourpaint/tools/kptoolcolorwasher.h	2005-06-23 13:47:06.200414952 +1000
@@ -26,11 +26,13 @@
 */
 
 
-#ifndef __kptoolcolorwasher_h__
-#define __kptoolcolorwasher_h__
+#ifndef KP_TOOL_COLOR_WASHER_H
+#define KP_TOOL_COLOR_WASHER_H
+
 
 #include <kptoolpen.h>
 
+
 class kpToolColorWasher : public kpToolPen
 {
 Q_OBJECT
@@ -38,6 +40,11 @@ Q_OBJECT
 public:
     kpToolColorWasher (kpMainWindow *mainWindow);
     virtual ~kpToolColorWasher ();
+
+
+public:
+    virtual void globalDraw ();
 };
 
-#endif  // __kptoolcolorwasher_h__
+
+#endif  // KP_TOOL_COLOR_WASHER_H
diff -udpr -x'*.o' -x'*.moc' -xconfig.log -x.deps -xkolourpaintlicense.h -x.libs -xMakefile.in -xMakefile -x'*~' -x'*.lo' -x'.*.sw*' -xk -xCODING_STYLE -xkolourpaintversion.h base/kolourpaint/tools/kptooleraser.cpp head/kolourpaint/tools/kptooleraser.cpp
--- base/kolourpaint/tools/kptooleraser.cpp	2005-02-02 22:11:28.000000000 +1100
+++ head/kolourpaint/tools/kptooleraser.cpp	2005-06-23 13:53:44.686835808 +1000
@@ -26,9 +26,17 @@
 */
 
 
-#include <klocale.h>
+#define DEBUG_KP_TOOL_ERASER 0
+
+
 #include <kptooleraser.h>
 
+#include <klocale.h>
+
+#include <kpcommandhistory.h>
+#include <kptoolclear.h>
+
+
 kpToolEraser::kpToolEraser (kpMainWindow *mainWindow)
     : kpToolPen (kpToolPen::Eraser,
                  i18n ("Eraser"), i18n ("Lets you rub out mistakes"),
@@ -41,4 +49,17 @@ kpToolEraser::~kpToolEraser ()
 {
 }
 
+
+// public virtual [base kpTool]
+void kpToolEraser::globalDraw ()
+{
+#if DEBUG_KP_TOOL_ERASER
+    kdDebug () << "kpToolEraser::globalDraw()" << endl;
+#endif
+
+    commandHistory ()->addCommand (
+        new kpToolClearCommand (false/*act on doc, not sel*/, mainWindow ()));
+}
+
+
 #include <kptooleraser.moc>
diff -udpr -x'*.o' -x'*.moc' -xconfig.log -x.deps -xkolourpaintlicense.h -x.libs -xMakefile.in -xMakefile -x'*~' -x'*.lo' -x'.*.sw*' -xk -xCODING_STYLE -xkolourpaintversion.h base/kolourpaint/tools/kptooleraser.h head/kolourpaint/tools/kptooleraser.h
--- base/kolourpaint/tools/kptooleraser.h	2005-02-02 22:11:28.000000000 +1100
+++ head/kolourpaint/tools/kptooleraser.h	2005-06-23 13:46:35.946014320 +1000
@@ -26,18 +26,25 @@
 */
 
 
-#ifndef __kptooleraser_h__
-#define __kptooleraser_h__
+#ifndef KP_TOOL_ERASER_H
+#define KP_TOOL_ERASER_H
+
 
 #include <kptoolpen.h>
 
+
 class kpToolEraser : public kpToolPen
 {
-Q_OBJECT	
+Q_OBJECT
 
 public:
     kpToolEraser (kpMainWindow *mainWindow);
     virtual ~kpToolEraser ();
+    
+    
+public:
+    virtual void globalDraw ();
 };
 
-#endif  // __kptooleraser_h__
+
+#endif  // KP_TOOL_ERASER_H
diff -udpr -x'*.o' -x'*.moc' -xconfig.log -x.deps -xkolourpaintlicense.h -x.libs -xMakefile.in -xMakefile -x'*~' -x'*.lo' -x'.*.sw*' -xk -xCODING_STYLE -xkolourpaintversion.h base/kolourpaint/tools/kptoolpen.cpp head/kolourpaint/tools/kptoolpen.cpp
--- base/kolourpaint/tools/kptoolpen.cpp	2005-02-02 22:11:28.000000000 +1100
+++ head/kolourpaint/tools/kptoolpen.cpp	2005-06-23 13:48:15.501879528 +1000
@@ -361,95 +361,6 @@ bool kpToolPen::wash (QPainter *painter,
 }
 
 // virtual
-void kpToolPen::globalDraw ()
-{
-    // it's easiest to reimplement globalDraw() here rather than in
-    // all the relevant subclasses
-
-    if (m_mode == Eraser)
-    {
-    #if DEBUG_KP_TOOL_PEN
-        kdDebug () << "kpToolPen::globalDraw() eraser" << endl;
-    #endif
-        mainWindow ()->commandHistory ()->addCommand (
-            new kpToolClearCommand (false/*act on doc, not sel*/, mainWindow ()));
-    }
-    else if (m_mode == ColorWasher)
-    {
-    #if DEBUG_KP_TOOL_PEN
-        kdDebug () << "kpToolPen::globalDraw() colour eraser" << endl;
-    #endif
-        if (foregroundColor () == backgroundColor () && processedColorSimilarity () == 0)
-            return;
-
-        QApplication::setOverrideCursor (Qt::waitCursor);
-
-        kpToolPenCommand *cmd = new kpToolPenCommand (
-            i18n ("Color Eraser"), mainWindow ());
-
-        QPainter painter, maskPainter;
-        QBitmap maskBitmap;
-
-        if (backgroundColor ().isOpaque ())
-        {
-            painter.begin (document ()->pixmap ());
-            painter.setPen (backgroundColor ().toQColor ());
-        }
-
-        if (backgroundColor ().isTransparent () ||
-            document ()->pixmap ()->mask ())
-        {
-            maskBitmap = kpPixmapFX::getNonNullMask (*document ()->pixmap ());
-            maskPainter.begin (&maskBitmap);
-
-            maskPainter.setPen (backgroundColor ().maskColor ());
-        }
-
-        const QImage image = kpPixmapFX::convertToImage (*document ()->pixmap ());
-        QRect rect = document ()->rect ();
-
-        const bool didSomething = wash (&painter, &maskPainter, image,
-                                        foregroundColor ()/*replace foreground*/,
-                                        rect, rect);
-
-        // flush
-        if (painter.isActive ())
-            painter.end ();
-
-        if (maskPainter.isActive ())
-            maskPainter.end ();
-
-        if (didSomething)
-        {
-            if (!maskBitmap.isNull ())
-                document ()->pixmap ()->setMask (maskBitmap);
-
-
-            document ()->slotContentsChanged (rect);
-
-
-            cmd->updateBoundingRect (rect);
-            cmd->finalize ();
-
-            mainWindow ()->commandHistory ()->addCommand (cmd, false /* don't exec */);
-
-            // don't delete - it's up to the commandHistory
-            cmd = 0;
-        }
-        else
-        {
-        #if DEBUG_KP_TOOL_PEN
-            kdDebug () << "\tisNOP" << endl;
-        #endif
-            delete cmd;
-            cmd = 0;
-        }
-
-        QApplication::restoreOverrideCursor ();
-    }
-}
-
-// virtual
 // TODO: refactor!
 void kpToolPen::draw (const QPoint &thisPoint, const QPoint &lastPoint, const QRect &)
 {
diff -udpr -x'*.o' -x'*.moc' -xconfig.log -x.deps -xkolourpaintlicense.h -x.libs -xMakefile.in -xMakefile -x'*~' -x'*.lo' -x'.*.sw*' -xk -xCODING_STYLE -xkolourpaintversion.h base/kolourpaint/tools/kptoolpen.h head/kolourpaint/tools/kptoolpen.h
--- base/kolourpaint/tools/kptoolpen.h	2005-02-02 22:11:28.000000000 +1100
+++ head/kolourpaint/tools/kptoolpen.h	2005-06-23 13:54:50.078894704 +1000
@@ -79,7 +79,7 @@ public:
 
     void setMode (Mode mode);
 
-private:
+protected:
     QString haventBegunDrawUserMessage () const;
     
 public:
@@ -88,20 +88,19 @@ public:
 
     virtual void beginDraw ();
     virtual void hover (const QPoint &point);
-    virtual void globalDraw ();
     virtual void draw (const QPoint &thisPoint, const QPoint &lastPoint, const QRect &);
     virtual void cancelShape ();
     virtual void releasedAllButtons ();
     virtual void endDraw (const QPoint &, const QRect &);
 
-private slots:
+protected slots:
     virtual void slotForegroundColorChanged (const kpColor &col);
     virtual void slotBackgroundColorChanged (const kpColor &col);
 
     void slotBrushChanged (const QPixmap &pixmap, bool isDiagonalLine);
     void slotEraserSizeChanged (int size);
 
-private:
+protected:
     bool wash (QPainter *painter, QPainter *maskPainter,
                const QImage &image,
                const kpColor &colorToReplace,
