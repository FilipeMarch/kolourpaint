BEGIN
CTRL+MouseWheel = Zoom if not in middle of draw operation.  The cursor
is kept under the same doc pos after zoom in/out.  It may be a little off
due to rounding error or if you scroll the wheel too quickly (and zoom
operations are stacked I suppose?).

Backend:
* kpMainWindow
  - Add "centerUnderCursor" arg to zoomTo() - keeps cursor under same doc
       pos after zoom
  - Move {slotZoomIn,slotZoomOut,slotZoom}() functionality into
         {zoomIn,zoomOut,zoomAccordingToZoomAction}(bool centerUnderCursor)
* kpView
  - transform{ViewToDoc,DocToView}[XY](int) now accepts and returns doubles
  - Add transformViewToOtherView()
  - add wheelEvent()
* kpViewScrollableContainer
  - capture contentsWheelEvent() and pass to kpView::wheelEvent()
* kpTool
  - add wheelEvent()
END

diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/kpmainwindow.h head/kolourpaint/kpmainwindow.h
--- base/kolourpaint/kpmainwindow.h	2005-02-02 22:14:12.000000000 +1100
+++ head/kolourpaint/kpmainwindow.h	2004-01-01 00:00:00.000000000 +1100
@@ -448,7 +448,7 @@ private:
     void sendZoomListToActionZoom ();
     int zoomLevelFromString (const QString &string);
     QString zoomLevelToString (int zoomLevel);
-    void zoomTo (int zoomLevel);
+    void zoomTo (int zoomLevel, bool centerUnderCursor = false);
 
 private slots:
     void finishZoomTo ();
@@ -459,9 +459,18 @@ private slots:
     void slotFitToWidth ();
     void slotFitToHeight ();
 
+public:
+    void zoomIn (bool centerUnderCursor = false);
+    void zoomOut (bool centerUnderCursor = false);
+    
+public slots:
     void slotZoomIn ();
     void slotZoomOut ();
 
+private:
+    void zoomAccordingToZoomAction (bool centerUnderCursor = false);
+    
+private slots:
     void slotZoom ();
 
     void slotShowGridToggled ();
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/kpmainwindow_view.cpp head/kolourpaint/kpmainwindow_view.cpp
--- base/kolourpaint/kpmainwindow_view.cpp	2005-06-13 22:24:18.000000000 +1000
+++ head/kolourpaint/kpmainwindow_view.cpp	2005-06-14 13:32:00.441750280 +1000
@@ -215,7 +215,7 @@ QString kpMainWindow::zoomLevelToString 
 }
 
 // private
-void kpMainWindow::zoomTo (int zoomLevel)
+void kpMainWindow::zoomTo (int zoomLevel, bool centerUnderCursor)
 {
 #if DEBUG_KP_MAIN_WINDOW
     kdDebug () << "kpMainWindow::zoomTo (" << zoomLevel << ")" << endl;
@@ -312,12 +312,42 @@ void kpMainWindow::zoomTo (int zoomLevel
         //       scrollview; hence the centring is off by about 5-10 pixels.
 
         // TODO: use visibleRect() for greater accuracy?
-        int newCenterX = (m_scrollView->contentsX ()
-                         + QMIN (m_mainView->width (), m_scrollView->visibleWidth ()) / 2)
-                         * zoomLevel / m_mainView->zoomLevelX ();
-        int newCenterY = (m_scrollView->contentsY ()
-                         + QMIN (m_mainView->height (), m_scrollView->visibleHeight ()) / 2)
-                         * zoomLevel / m_mainView->zoomLevelY ();
+        
+        int viewX, viewY;
+        
+        bool targetDocAvail = false;
+        double targetDocX, targetDocY;
+        
+        if (centerUnderCursor &&
+            m_viewManager && m_viewManager->viewUnderCursor ())
+        {
+            kpView *const vuc = m_viewManager->viewUnderCursor ();
+            QPoint viewPoint = vuc->mouseViewPoint ();
+        
+            // vuc->transformViewToDoc() returns QPoint which only has int
+            // accuracy so we do X and Y manually.
+            targetDocX = vuc->transformViewToDocX (viewPoint.x ());
+            targetDocY = vuc->transformViewToDocY (viewPoint.y ());
+            targetDocAvail = true;
+                    
+            if (vuc != m_mainView)
+                viewPoint = vuc->transformViewToOtherView (viewPoint, m_mainView);
+            
+            viewX = viewPoint.x ();
+            viewY = viewPoint.y ();
+        }
+        else
+        {
+            viewX = m_scrollView->contentsX () +
+                        QMIN (m_mainView->width (),
+                              m_scrollView->visibleWidth ()) / 2;
+            viewY = m_scrollView->contentsY () +
+                        QMIN (m_mainView->height (),
+                              m_scrollView->visibleHeight ()) / 2;
+        }
+        
+        int newCenterX = viewX * zoomLevel / m_mainView->zoomLevelX ();
+        int newCenterY = viewY * zoomLevel / m_mainView->zoomLevelY ();
 
         m_mainView->setZoomLevel (zoomLevel, zoomLevel);
     #if DEBUG_ZOOM_FLICKER
@@ -347,6 +377,43 @@ void kpMainWindow::zoomTo (int zoomLevel
     }
     #endif
 
+        if (centerUnderCursor &&
+            targetDocAvail &&
+            m_viewManager && m_viewManager->viewUnderCursor ())
+        {
+            kpView *const vuc = m_viewManager->viewUnderCursor ();
+            
+        #if DEBUG_KP_MAIN_WINDOW || 1
+            kdDebug () << "\tcenterUnderCursor: reposition cursor; viewUnderCursor="
+                       << vuc->name () << endl;
+        #endif
+        
+            const double viewX = vuc->transformDocToViewX (targetDocX);
+            const double viewY = vuc->transformDocToViewY (targetDocY);
+            // Rounding error from zooming in and out :(
+            // TODO: do everything in terms of tool doc points in type "double".
+            const QPoint viewPoint ((int) viewX, (int) viewY);
+        #if DEBUG_KP_MAIN_WINDOW || 1
+            kdDebug () << "\t\tdoc: (" << targetDocX << "," << targetDocY << ")"
+                       << " viewUnderCursor: (" << viewX << "," << viewY << ")"
+                       << endl; 
+        #endif
+        
+            const QPoint globalPoint =
+                kpWidgetMapper::toGlobal (vuc, viewPoint);
+        #if DEBUG_KP_MAIN_WINDOW || 1
+            kdDebug () << "\t\tglobalPoint=" << globalPoint << endl;
+        #endif
+              
+            // TODO: Determine some sane cursor flashing indication.
+            //
+            //       Major problem: if using QApplication::setOverrideCursor()
+            //           and in some stage of flash and window quits.
+            //
+            //           Or if using kpView::setCursor() and change tool.
+            QCursor::setPos (globalPoint);
+        }
+        
     #if DEBUG_KP_MAIN_WINDOW && 1
         kdDebug () << "\t\tcheck (contentsX=" << m_scrollView->contentsX ()
                     << ",contentsY=" << m_scrollView->contentsY ()
@@ -556,26 +623,57 @@ void kpMainWindow::slotFitToHeight ()
 }
 
 
-// private slot
+// public
+void kpMainWindow::zoomIn (bool centerUnderCursor)
+{    
+    const int targetItem = m_actionZoom->currentItem () + 1;
+    
+    if (targetItem >= (int) m_zoomList.count ())
+        return;
+        
+    m_actionZoom->setCurrentItem (targetItem);
+    zoomAccordingToZoomAction (centerUnderCursor);
+}
+
+// public
+void kpMainWindow::zoomOut (bool centerUnderCursor)
+{    
+    const int targetItem = m_actionZoom->currentItem () - 1;
+    
+    if (targetItem < 0)
+        return;
+        
+    m_actionZoom->setCurrentItem (targetItem);
+    zoomAccordingToZoomAction (centerUnderCursor);
+}
+
+
+// public slot
 void kpMainWindow::slotZoomIn ()
 {
 #if DEBUG_KP_MAIN_WINDOW
     kdDebug () << "kpMainWindow::slotZoomIn ()" << endl;
 #endif
 
-    m_actionZoom->setCurrentItem (m_actionZoom->currentItem () + 1);
-    slotZoom ();
+    zoomIn (false/*don't center under cursor*/);
 }
 
-// private slot
+// public slot
 void kpMainWindow::slotZoomOut ()
 {
 #if DEBUG_KP_MAIN_WINDOW
     kdDebug () << "kpMainWindow::slotZoomOut ()" << endl;
 #endif
 
-    m_actionZoom->setCurrentItem (m_actionZoom->currentItem () - 1);
-    slotZoom ();
+    zoomOut (false/*don't center under cursor*/);
+}
+
+
+// public
+void kpMainWindow::zoomAccordingToZoomAction (bool centerUnderCursor)
+{
+    zoomTo (zoomLevelFromString (m_actionZoom->currentText ()),
+                                 centerUnderCursor);
 }
 
 // private slot
@@ -585,7 +683,7 @@ void kpMainWindow::slotZoom ()
     kdDebug () << "kpMainWindow::slotZoom () index=" << m_actionZoom->currentItem ()
                << " text='" << m_actionZoom->currentText () << "'" << endl;
 #endif
-    zoomTo (zoomLevelFromString (m_actionZoom->currentText ()));
+    zoomAccordingToZoomAction (false/*don't center under cursor*/);
 }
 
 
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/kpview.cpp head/kolourpaint/kpview.cpp
--- base/kolourpaint/kpview.cpp	2005-02-02 23:12:46.000000000 +1100
+++ head/kolourpaint/kpview.cpp	2005-06-14 13:33:55.298289432 +1000
@@ -112,7 +112,7 @@ kpView::kpView (kpDocument *document,
     setFocusPolicy (QWidget::WheelFocus);
     setMouseTracking (true);  // mouseMoveEvent's even when no mousebtn down
     setKeyCompression (true);
-    setInputMethodEnabled (true); // ensure using InputMethod
+    setInputMethodEnabled (true);  // ensure using InputMethod
 }
 
 kpView::~kpView ()
@@ -416,22 +416,22 @@ void kpView::updateBuddyViewScrollableCo
 
 
 // public
-int kpView::transformViewToDocX (int viewX) const
+double kpView::transformViewToDocX (double viewX) const
 {
-    return (viewX - origin ().x ()) * 100 / zoomLevelX ();
+    return (viewX - origin ().x ()) * 100.0 / zoomLevelX ();
 }
 
 // public
-int kpView::transformViewToDocY (int viewY) const
+double kpView::transformViewToDocY (double viewY) const
 {
-    return (viewY - origin ().y ()) * 100 / zoomLevelY ();
+    return (viewY - origin ().y ()) * 100.0 / zoomLevelY ();
 }
 
 // public
 QPoint kpView::transformViewToDoc (const QPoint &viewPoint) const
 {
-    return QPoint (transformViewToDocX (viewPoint.x ()),
-                   transformViewToDocY (viewPoint.y ()));
+    return QPoint ((int) transformViewToDocX (viewPoint.x ()),
+                   (int) transformViewToDocY (viewPoint.y ()));
 }
 
 // public
@@ -459,22 +459,22 @@ QRect kpView::transformViewToDoc (const 
 
 
 // public
-int kpView::transformDocToViewX (int docX) const
+double kpView::transformDocToViewX (double docX) const
 {
-    return (docX * zoomLevelX () / 100) + origin ().x ();
+    return (docX * zoomLevelX () / 100.0) + origin ().x ();
 }
 
 // public
-int kpView::transformDocToViewY (int docY) const
+double kpView::transformDocToViewY (double docY) const
 {
-    return (docY * zoomLevelY () / 100) + origin ().y ();
+    return (docY * zoomLevelY () / 100.0) + origin ().y ();
 }
 
 // public
 QPoint kpView::transformDocToView (const QPoint &docPoint) const
 {
-    return QPoint (transformDocToViewX (docPoint.x ()),
-                   transformDocToViewY (docPoint.y ()));
+    return QPoint ((int) transformDocToViewX (docPoint.x ()),
+                   (int) transformDocToViewY (docPoint.y ()));
 }
 
 // public
@@ -502,6 +502,23 @@ QRect kpView::transformDocToView (const 
 
 
 // public
+QPoint kpView::transformViewToOtherView (const QPoint &viewPoint,
+                                         const kpView *otherView)
+{
+    if (this == otherView)
+        return viewPoint;
+        
+    const double docX = transformViewToDocX (viewPoint.x ());
+    const double docY = transformViewToDocY (viewPoint.y ());
+    
+    const double otherViewX = otherView->transformDocToViewX (docX);
+    const double otherViewY = otherView->transformDocToViewY (docY);
+                   
+    return QPoint ((int) otherViewX, (int) otherViewY);
+}
+
+
+// public
 int kpView::zoomedDocWidth () const
 {
     return document () ? document ()->width () * zoomLevelX () / 100 : 0;
@@ -981,6 +998,13 @@ void kpView::mouseReleaseEvent (QMouseEv
     e->accept ();
 }
 
+// public virtual [base QWidget]
+void kpView::wheelEvent (QWheelEvent *e)
+{
+    if (tool ())
+        tool ()->wheelEvent (e);
+}
+
 
 // protected virtual [base QWidget]
 void kpView::keyPressEvent (QKeyEvent *e)
@@ -1114,6 +1138,7 @@ void kpView::resizeEvent (QResizeEvent *
     emit sizeChanged (size ());
 }
 
+
 // private virtual
 void kpView::imStartEvent (QIMEvent *e)
 {
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/kpview.h head/kolourpaint/kpview.h
--- base/kolourpaint/kpview.h	2005-02-02 22:36:47.000000000 +1100
+++ head/kolourpaint/kpview.h	2005-06-14 13:34:54.561280088 +1000
@@ -232,7 +232,7 @@ public:
      * @returns viewX transformed to document coordinates, based on the
      *                origin() and zoomLevelX().
      */
-    int transformViewToDocX (int viewX) const;
+    double transformViewToDocX (double viewX) const;
 
     /**
      * @param viewY Vertical position in view coordinates.
@@ -240,7 +240,7 @@ public:
      * @returns viewY transformed to document coordinates, based on the
      *                origin() and zoomLevelY().
      */
-    int transformViewToDocY (int viewY) const;
+    double transformViewToDocY (double viewY) const;
 
     /**
      * @param viewPoint Position in view coordinates.
@@ -269,7 +269,7 @@ public:
      * @returns docX transformed to view coordinates, based on the origin()
      *               and zoomLevelX().
      */
-    int transformDocToViewX (int docX) const;
+    double transformDocToViewX (double docX) const;
 
     /**
      * @param docY Vertical position in document coordinates.
@@ -277,7 +277,7 @@ public:
      * @returns docY transformed to view coordinates, based on the origin()
      *               and zoomLevelY().
      */
-    int transformDocToViewY (int docY) const;
+    double transformDocToViewY (double docY) const;
 
     /**
      * @param docPoint Position in document coordinates.
@@ -301,6 +301,20 @@ public:
 
 
     /**
+     * @param viewPoint Position in view coordinates.
+     * @param otherView View whose coordinate system the return value will
+     *                  be in.
+     *
+     * @returns viewPoint transformed to the coordinate system of
+     *          @param otherView based on this and otherView's origin(),
+     *          zoomLevelX() and zoomLevelY().  This has less rounding
+     *          error than otherView->transformDocToView (transformViewToDoc (viewPoint)).
+     */
+    QPoint transformViewToOtherView (const QPoint &viewPoint,
+                                     const kpView *otherView);
+    
+                                        
+    /**
      * @returns the approximate view width required to display the entire
      *          document(), based on the zoom level only.
      */
@@ -452,7 +466,12 @@ protected:
     virtual void mouseMoveEvent (QMouseEvent *e);
     virtual void mousePressEvent (QMouseEvent *e);
     virtual void mouseReleaseEvent (QMouseEvent *e);
+public:
+    // (needs to be public as it may also get event from
+    //  QScrollView::contentsWheelEvent())
+    virtual void wheelEvent (QWheelEvent *e);
 
+protected:
     virtual void keyPressEvent (QKeyEvent *e);
     virtual void keyReleaseEvent (QKeyEvent *e);
 
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/kpviewscrollablecontainer.cpp head/kolourpaint/kpviewscrollablecontainer.cpp
--- base/kolourpaint/kpviewscrollablecontainer.cpp	2005-02-02 22:11:25.000000000 +1100
+++ head/kolourpaint/kpviewscrollablecontainer.cpp	2005-06-14 13:35:57.139766712 +1000
@@ -515,8 +515,8 @@ QSize kpViewScrollableContainer::newDocS
     if (!docResizingGrip ())
         return QSize ();
 
-    const int docX = m_view->transformViewToDocX (m_view->width () + viewDX);
-    const int docY = m_view->transformViewToDocY (m_view->height () + viewDY);
+    const int docX = (int) m_view->transformViewToDocX (m_view->width () + viewDX);
+    const int docY = (int) m_view->transformViewToDocY (m_view->height () + viewDY);
 
     return QSize (QMAX (1, docX), QMAX (1, docY));
 }
@@ -739,8 +739,8 @@ void kpViewScrollableContainer::updateRe
 
     if (viewX >= 0 && viewY >= 0)
     {
-        m_resizeRoundedLastViewX = m_view->transformDocToViewX (m_view->transformViewToDocX (viewX));
-        m_resizeRoundedLastViewY = m_view->transformDocToViewY (m_view->transformViewToDocY (viewY));
+        m_resizeRoundedLastViewX = (int) m_view->transformDocToViewX ((int) m_view->transformViewToDocX (viewX));
+        m_resizeRoundedLastViewY = (int) m_view->transformDocToViewY ((int) m_view->transformViewToDocY (viewY));
 
         m_resizeRoundedLastViewDX = viewDX;
         m_resizeRoundedLastViewDY = viewDY;
@@ -816,8 +816,8 @@ void kpViewScrollableContainer::slotGrip
 
     m_haveMovedFromOriginalDocSize = true;
 
-    updateResizeLines (QMAX (1, QMAX (m_view->width () + viewDX, m_view->transformDocToViewX (1))),
-                       QMAX (1, QMAX (m_view->height () + viewDY, m_view->transformDocToViewY (1))),
+    updateResizeLines (QMAX (1, QMAX (m_view->width () + viewDX, (int) m_view->transformDocToViewX (1))),
+                       QMAX (1, QMAX (m_view->height () + viewDY, (int) m_view->transformDocToViewY (1))),
                        viewDX, viewDY);
 
     emit continuedDocResize (newDocSize ());
@@ -1329,6 +1329,19 @@ void kpViewScrollableContainer::mouseMov
 }
 
 
+// protected virtual [base QScrollView]
+void kpViewScrollableContainer::contentsWheelEvent (QWheelEvent *e)
+{
+    e->ignore ();
+    
+    if (m_view)
+        m_view->wheelEvent (e);
+        
+    if (!e->isAccepted ())
+        QScrollView::contentsWheelEvent (e);
+}
+
+
 QRect kpViewScrollableContainer::noDragScrollRect () const
 {
     return QRect (DragScrollLeftTopMargin, DragScrollLeftTopMargin,
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/kpviewscrollablecontainer.h head/kolourpaint/kpviewscrollablecontainer.h
--- base/kolourpaint/kpviewscrollablecontainer.h	2005-02-02 22:11:25.000000000 +1100
+++ head/kolourpaint/kpviewscrollablecontainer.h	2005-06-13 23:34:04.000000000 +1000
@@ -229,6 +229,7 @@ protected:
 
     virtual void contentsDragMoveEvent (QDragMoveEvent *e);
     virtual void contentsMouseMoveEvent (QMouseEvent *e);
+    virtual void contentsWheelEvent (QWheelEvent *e);
     virtual void mouseMoveEvent (QMouseEvent *e);
     virtual bool eventFilter (QObject *watchedObject, QEvent *e);
     virtual void viewportPaintEvent (QPaintEvent *e);
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/tools/kptool.cpp head/kolourpaint/tools/kptool.cpp
--- base/kolourpaint/tools/kptool.cpp	2005-02-02 22:36:48.000000000 +1100
+++ head/kolourpaint/tools/kptool.cpp	2005-06-14 12:59:32.000000000 +1000
@@ -1132,6 +1132,50 @@ void kpTool::mouseReleaseEvent (QMouseEv
     }
 }
 
+void kpTool::wheelEvent (QWheelEvent *e)
+{
+#if DEBUG_KP_TOOL
+    kdDebug () << "kpTool::wheelEvent() state=" << e->state ()
+               << " hasBegunDraw=" << hasBegunDraw ()
+               << " delta=" << e->delta ()
+               << endl;
+#endif
+
+    e->ignore ();
+    
+    // If CTRL not pressed, bye.
+    if ((e->state () & Qt::ControlButton) == 0)
+        return;
+    
+    // If drawing, bye; don't care if a shape in progress though.
+    if (hasBegunDraw ())
+        return;
+        
+        
+    // Zoom in/out depending on wheel direction.
+    
+    // Moved wheel away from user?
+    if (e->delta () > 0)
+    {
+        m_mainWindow->zoomIn (true/*center under cursor*/);
+        e->accept ();
+    }
+    // Moved wheel towards user?
+    else if (e->delta () < 0)
+    {
+    #if 1
+        m_mainWindow->zoomOut (true/*center under cursor - make zoom in/out
+                                     stay under same doc pos*/);
+    #else
+        m_mainWindow->zoomOut (false/*don't center under cursor - as is
+                                      confusing behaviour when zooming
+                                      out*/);
+    #endif
+        e->accept ();
+    }
+}
+
+
 void kpTool::keyPressEvent (QKeyEvent *e)
 {
 #if DEBUG_KP_TOOL && 0
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/tools/kptool.h head/kolourpaint/tools/kptool.h
--- base/kolourpaint/tools/kptool.h	2005-02-02 22:36:48.000000000 +1100
+++ head/kolourpaint/tools/kptool.h	2005-06-13 23:49:23.000000000 +1000
@@ -305,11 +305,15 @@ protected:
     virtual void mousePressEvent (QMouseEvent *e);
     virtual void mouseMoveEvent (QMouseEvent *e);
     virtual void mouseReleaseEvent (QMouseEvent *e);
+    virtual void wheelEvent (QWheelEvent *e);
+    
     virtual void keyPressEvent (QKeyEvent *e);
     virtual void keyReleaseEvent (QKeyEvent *e);
+    
     virtual void imStartEvent(QIMEvent *){}
     virtual void imComposeEvent(QIMEvent *){}
     virtual void imEndEvent(QIMEvent *){}
+    
 private:
     void keyUpdateModifierState (QKeyEvent *e);
     void notifyModifierStateChanged ();
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/views/kpunzoomedthumbnailview.cpp head/kolourpaint/views/kpunzoomedthumbnailview.cpp
--- base/kolourpaint/views/kpunzoomedthumbnailview.cpp	2005-02-02 22:16:29.000000000 +1100
+++ head/kolourpaint/views/kpunzoomedthumbnailview.cpp	2005-06-14 00:43:16.000000000 +1000
@@ -111,7 +111,7 @@ void kpUnzoomedThumbnailView::adjustToEn
     int x;
     if (document ()->width () > width ())
     {
-        x = buddyView ()->transformViewToDocX (scrollViewContentsX);
+        x = (int) buddyView ()->transformViewToDocX (scrollViewContentsX);
         const int rightMostAllowedX = QMAX (0, document ()->width () - width ());
     #if DEBUG_KP_UNZOOMED_THUMBNAIL_VIEW
         kdDebug () << "\tdocX=" << x
@@ -134,7 +134,7 @@ void kpUnzoomedThumbnailView::adjustToEn
     int y;
     if (document ()->height () > height ())
     {
-        y = buddyView ()->transformViewToDocY (scrollViewContentsY);
+        y = (int) buddyView ()->transformViewToDocY (scrollViewContentsY);
         const int bottomMostAllowedY = QMAX (0, document ()->height () - height ());
     #if DEBUG_KP_UNZOOMED_THUMBNAIL_VIEW
         kdDebug () << "\tdocY=" << y
diff -urdp -x.deps -x.libs -x'*.moc' -x'*.o' -xMakefile -x'*~' -x'.*.swo' -x'.*.swp' -xkptoolselection.cpp base/kolourpaint/views/kpzoomedview.cpp head/kolourpaint/views/kpzoomedview.cpp
--- base/kolourpaint/views/kpzoomedview.cpp	2005-02-02 22:16:29.000000000 +1100
+++ head/kolourpaint/views/kpzoomedview.cpp	2005-06-14 00:43:28.000000000 +1000
@@ -94,8 +94,8 @@ void kpZoomedView::adjustToEnvironment (
     if (document ())
     {
         // TODO: use zoomedDocWidth() & zoomedDocHeight()?
-        resize (transformDocToViewX (document ()->width ()),
-                transformDocToViewY (document ()->height ()));
+        resize ((int) transformDocToViewX (document ()->width ()),
+                (int) transformDocToViewY (document ()->height ()));
     }
 }
 
