#!/bin/bash
# TODO: rename to 00


echo 'KolourPaint Source Collector v1.1 (2005-07-31)'
echo 'Copyright (c) Clarence Dang 2004,2005'
echo

SELF_ROOT=`dirname $0`
if [ -z "`echo "$SELF_ROOT" | egrep '^/'`" ]
then
    SELF_ROOT="$PWD/$SELF_ROOT"
fi

RUN_ROOT="$PWD"
if [ -z "`echo "$RUN_ROOT" | egrep '^/'`" ]
then
    RUN_ROOT="$PWD/$RUN_ROOT"
fi


if [ $# -eq 0 ] || [ $# -gt 2 ]
then
    echo Syntax: $0 '[--no-query-environ]' '<control>'
    echo
    exit 1
fi


QUERY_ENVIRON=1
if [ "$1" = "--no-query-environ" ]
then
    QUERY_ENVIRON=
    shift
fi


# Read control file
echo Reading control file $1
if ! . "$1"
then
    echo FAIL
    echo
    exit 1
fi
echo


# Prompts user for new value of variable (user can press Enter to accept
# given value).  Always returns what the value of the variable should be
# in $RETURN.
#
# Usage e.g.
# readEnviron "Root of SVN" "$SVNROOT"
# SVNROOT=$RETURN
function readEnviron
{
    RE_MESS="$1"
    RE_VAL="$2"

    echo -n "$RE_MESS [$RE_VAL]: "
    if read && [ ! -z "$REPLY" ]
    then
        RETURN="$REPLY"
        echo OVERRIDE $RE_MESS to $RETURN
    else
        RETURN="$RE_VAL"
    fi
}


if [ $QUERY_ENVIRON ]
then
    #
    # Generated by mk_mksrcdist_readEnviron_calls
    # (which was lost in an accident :( )
    #
    readEnviron "kde-i18n" $KDE_I18N_SVN_DIR
    KDE_I18N_SVN_DIR=$RETURN

    readEnviron "kde-common/admin" $KDE_ADMIN_SVN_DIR
    KDE_ADMIN_SVN_DIR=$RETURN

    readEnviron "kdegraphics (KDE)" $KDE_KDEGRAPHICS_SVN_DIR
    KDE_KDEGRAPHICS_SVN_DIR=$RETURN

    readEnviron "kdegraphics (KolourPaint)" $KP_KDEGRAPHICS_SVN_DIR
    KP_KDEGRAPHICS_SVN_DIR=$RETURN

    readEnviron "kdegraphics/doc" $KP_DOC_SVN_DIR
    KP_DOC_SVN_DIR=$RETURN

    readEnviron "branches/kolourpaint/control" $KP_CONTROL_SVN_DIR
    KP_CONTROL_SVN_DIR=$RETURN

    # So that you can hold Enter to skip above :) without --no-query-environ
    echo
    echo 'Type "go" to continue.'
    while true
    do
        read
        if [ "$REPLY" = "go" ]
        then
            break
        fi
    done
    echo
fi


KP_VERSION="`<$KP_KDEGRAPHICS_SVN_DIR/kolourpaint/VERSION`"
echo Version: \'$KP_VERSION\'
if [ -z "`echo $KP_VERSION | egrep "^[0-9]+\.[0-9]+.*$"`" ]
then
    echo $KP_VERSION is not a valid version.  FAIL.
    echo
    exit 1
fi

PACKAGE_ROOT="kolourpaint-$KP_VERSION-before-Makefile.cvs"
if [ -e "$PACKAGE_ROOT" ]
then
    while true
    do
        echo -n "$PACKAGE_ROOT already exists.  Delete [Y/N]? "
        read
        if [ "$REPLY" = y ]
        then
            rm -rf "$PACKAGE_ROOT"
            break
        elif [ "$REPLY" = n ]
        then
            exit 1
        fi
    done
    echo
fi


echo -n "Creating directory $PACKAGE_ROOT ... "
if mkdir "$PACKAGE_ROOT"
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying Makefile.cvs Makefile.am.in ... "
if cp -a "$KDE_KDEGRAPHICS_SVN_DIR"/{Makefile.cvs,Makefile.am.in} "$PACKAGE_ROOT"
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying configure.in.in and adjusting #MIN_CONFIG to 3.0 ... "
if egrep "^#MIN_CONFIG$" "$KDE_KDEGRAPHICS_SVN_DIR"/configure.in.in >/dev/null &&
    sed -e "s/^#MIN_CONFIG$/#MIN_CONFIG(3.0)/" "$KDE_KDEGRAPHICS_SVN_DIR"/configure.in.in > "$PACKAGE_ROOT"/configure.in.in
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying admin/ ... "
if cp -a "$KDE_ADMIN_SVN_DIR" "$PACKAGE_ROOT"
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Creating and populating kolourpaint/ ... "
if cp -a "$KP_KDEGRAPHICS_SVN_DIR"/kolourpaint "$PACKAGE_ROOT"/kolourpaint
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Removing kolourpaint/dist/ ... "
if rm -rf "$PACKAGE_ROOT"/kolourpaint/dist
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Moving plain text docs from kolourpaint/ to root ... "
if mv "$PACKAGE_ROOT"/kolourpaint/{AUTHORS,BUGS,ChangeLog,INSTALL,NEWS,README,VERSION} "$PACKAGE_ROOT"
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying TODO ... "
if cp -a "$KP_CONTROL_SVN_DIR/TODO" "$PACKAGE_ROOT"
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

# (Can't move COPYING since used in buildsys)
echo -n "Copying kolourpaint/COPYING to root ... "
if cp -a "$PACKAGE_ROOT"/kolourpaint/COPYING "$PACKAGE_ROOT"
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying doc/ ... "
if cd "$PACKAGE_ROOT" &&
    mkdir doc &&
    cd doc &&
    cp -a "$KP_DOC_SVN_DIR"/Makefile.am . &&
    cp -a "$KP_DOC_SVN_DIR"/kolourpaint . &&
    cd ../..
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

# Precompiled documentation since we depend on branches/KDE/3.5 but package we are
# making can only depend on KDE 3.0.
#
# Remember: Make sure mtime of index.cache.bz2 newer than
# index.docbook so index.cache.bz2 won't be rebuilt.  Have check just in
# case.
echo -n "Copying dist/doc/ ... "
if cd "$PACKAGE_ROOT"/doc/kolourpaint &&
    cp -a "$KP_KDEGRAPHICS_SVN_DIR"/kolourpaint/dist/doc/* . &&
    mv hacked-index.cache index.cache &&
    rm -f index.cache.bz2 &&   # TODO: remove
    bzip2 index.cache &&
    [ index.cache.bz2 -nt index.docbook ] &&
    cd ../../..
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Creating po/{,Makefile.am} ... "
if mkdir "$PACKAGE_ROOT"/po &&
    echo 'SUBDIRS = $(AUTODIRS)' > "$PACKAGE_ROOT"/po/Makefile.am
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying over kolourpaint.pot ... "
if cp "$KDE_I18N_SVN_DIR"/templates/kdegraphics/kolourpaint.pot "$PACKAGE_ROOT"/po
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Copying over po files ..."
NUM_LANGS=0
[ -f "$KDE_I18N_SVN_DIR"/subdirs.pris ] && PRIS=".pris"
for lang in `<"$KDE_I18N_SVN_DIR"/subdirs$PRIS`
do
    #echo -n "$lang ... "
    if [ "$lang" = xx ]
    then
        :
        #echo -n " !xx"
    elif [ -f "$KDE_I18N_SVN_DIR/$lang/messages/kdegraphics/kolourpaint.po" ]
    then
        if mkdir "$PACKAGE_ROOT/po/$lang" &&
            cp "$KDE_I18N_SVN_DIR/$lang/messages/kdegraphics/kolourpaint.po" "$PACKAGE_ROOT/po/$lang" &&
            echo "KDE_LANG = $lang" > "$PACKAGE_ROOT/po/$lang/Makefile.am" &&
            echo 'SUBDIRS = $(AUTODIRS)' >> "$PACKAGE_ROOT/po/$lang/Makefile.am" &&
            echo >> "$PACKAGE_ROOT/po/$lang/Makefile.am" &&
            echo 'POFILES = AUTO' >> "$PACKAGE_ROOT/po/$lang/Makefile.am"
        then
            NUM_LANGS=$((NUM_LANGS + 1))
            echo -n " $lang"
        else
            echo " FAIL"
            echo
            exit 1
        fi
    else
        :
        #echo -n " !$lang"
    fi
done
echo " ... $NUM_LANGS ... OK"

echo -n "Removing .svn's ... "
if cd "$PACKAGE_ROOT" &&  # avoid space issues
    find -type d -name .svn | xargs rm -rf &&
    cd ..
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Removing SVN/ dirs ... "
if cd "$PACKAGE_ROOT" &&  # avoid space issues
    find -type d -name SVN | xargs rm -rf &&
    cd ..
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi

echo -n "Removing bogus exec permissions ... "
if cd "$PACKAGE_ROOT" &&
    find -maxdepth 1 -type f -exec chmod a-x {} \; &&
    find doc po kolourpaint -type f -exec chmod a-x {} \; &&
    cd ..
then
    echo OK
else
    echo FAIL
    echo
    exit 1
fi


echo
echo All Done.
echo

echo Check against the previous versions with \'developerdiff\' and
echo examine every single difference to make sure they\'re intended.
echo
echo Then, run \'createbuildsys $PACKAGE_ROOT\'.
echo
